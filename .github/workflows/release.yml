name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      go-cache-key: ${{ steps.go-cache.outputs.cache-key }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - id: go-cache
        run: echo "cache-key=${{ hashFiles('**/go.sum') }}" >> $GITHUB_OUTPUT
      - id: version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.23
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-release-${{ needs.prepare.outputs.go-cache-key }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc \
            libayatana-appindicator3-dev \
            libgtk-3-dev \
            libx11-dev \
            libxcb1-dev \
            libxkbcommon-dev \
            libxkbcommon-x11-dev \
            libx11-xcb-dev \
            libxcursor-dev \
            libxrandr-dev \
            libxinerama-dev \
            libxi-dev \
            libgl1-mesa-dev \
            libxxf86vm-dev \
            xvfb

      - name: Install Wire
        run: go install github.com/google/wire/cmd/wire@latest

      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Wire code
        run: |
          cd internal/container
          wire gen -tags linux
          wire gen -tags windows
          wire gen -tags darwin

      - name: Build all platforms
        run: |
          chmod +x build/run-with-xvfb.sh
          ./build/run-with-xvfb.sh task build:all

  release:
    needs: [prepare, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: binaries
          path: bin

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            bin/godo.exe
            bin/godo-linux
          generate_release_notes: true
          draft: false
          prerelease: false 