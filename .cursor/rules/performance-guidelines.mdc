# Performance Guidelines

This project prioritizes performance while maintaining clean architecture.

## DI Performance

### Container Resolution
- Wire generates optimized code for fast resolution
- Minimize dependency graph complexity
- Use lazy loading for heavy components
- Profile container initialization time

### Resource Management
- Always provide cleanup functions
- Close database connections properly
- Sync loggers on shutdown
- Follow pattern in [internal/application/container/wire.go](mdc:internal/application/container/wire.go)

## Memory Management

### Object Lifecycle
- Use proper cleanup functions
- Avoid memory leaks in long-running processes
- Profile memory usage during startup
- Monitor for memory leaks in tests

### Database Connections
- Use connection pooling
- Close connections in cleanup functions
- Handle connection errors gracefully
- Example: [internal/infrastructure/storage/sqlite/store.go](mdc:internal/infrastructure/storage/sqlite/store.go)

## Startup Performance

### Lazy Loading
- Consider lazy loading for GUI components
- Load heavy resources on demand
- Profile startup time
- Optimize dependency graph

### Configuration Loading
- Load configuration once at startup
- Cache configuration values
- Validate configuration early
- Use efficient configuration parsing

## Monitoring
- Add metrics for container resolution time
- Monitor memory usage
- Track startup performance
- Profile critical paths
description:
globs:
alwaysApply: false
---
