# Project: Godo - A Minimalist Todo Application

## Project Overview
- Minimalist todo application with global hotkey support
- Built with Go and SQLite
- Runs as a system service
- Cross-platform compatibility

## Code Style & Standards
- Use Go 1.23+
- Follow standard Go formatting guidelines
- Implement dependency injection patterns
- Keep functions small and focused
- Use meaningful variable and function names

## Project Structure
- cmd/ - Main application entry points
- internal/ - Private application code
- pkg/ - Public libraries
- Use proper dependency injection containers

## Database
- Use SQLite3 for data storage
- Implement repository pattern
- Keep SQL queries simple and efficient
- Use prepared statements

## Testing
- Write unit tests for all packages
- Aim for 70% test coverage minimum
- Use table-driven tests where appropriate
- Mock external dependencies

## Documentation
- Document all exported functions and types
- Include usage examples in comments
- Keep README.md updated
- Use godoc compatible comments

## Best Practices
- Handle errors appropriately
- Use context for cancellation
- Implement proper logging
- Follow SOLID principles
- Use interfaces for flexibility

## System Integration
- Implement clean shutdown handling
- Support global hotkey registration
- Handle system service lifecycle properly
- Consider cross-platform compatibility

Remember to keep the code simple and maintainable while focusing on reliability and user experience.
