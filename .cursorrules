# .cursorrules file for Godo - A Todo Application with Quick-Note Support

code_style:
- description: "Follow standard Go formatting guidelines."
- formatter: gofmt
- rules:
  - use_meaningful_variable_and_function_names: true
  - implement_dependency_injection: true
  - use_logger_abstraction: true
  - use_structured_logging_with_zap: "Only in logger package implementation"
  - keep_functions_small_and_focused: true
  - use_modern_octal_literal_style: "0o600 instead of 0600"
  - avoid_time_sleep_for_synchronization: true
  - prefer_synchronization_primitives: true
  - implement_ready_state_callbacks: true
  - use_event_driven_ui_state_management: true
  - use_build_tags_for_platform_specific_code: true
  - follow_docker_windows_linux_build_tags: true
  - follow_restful_api_conventions: true
  - use_proper_http_status_codes: true
  - implement_request_validation: true
  - use_middleware_for_common_http_concerns: true
  - follow_jwt_best_practices: true
  - implement_rate_limiting: true
  - use_proper_websocket_connection_management: true
  - ensure_api_versioning: true
  - implement_health_checks: true
  - plan_for_scalability: true
  - use_secure_headers: true
  - monitor_performance: true
  - prefer_patch_for_partial_updates: "Use PATCH for partial updates instead of PUT"
  - preserve_unmodified_fields: "Don't require all fields in updates"
  - validate_timestamps: "Ensure valid timestamp formats and ranges"
  - handle_null_values: "Properly handle null/zero values in updates"
  - document_api_changes: "Keep API documentation up to date"

snippets:
- fyne_keyboard_shortcuts:
    description: "Add keyboard shortcuts using Fyne."
    code: |
      // Add keyboard shortcut (e.g., Ctrl+Enter)
      window.Canvas().AddShortcut(&desktop.CustomShortcut{
          KeyName:  fyne.KeyReturn,  // Or other key like KeyEscape
          Modifier: fyne.KeyModifierControl,  // Optional, remove for no modifier
      }, func(shortcut fyne.Shortcut) {
          // Shortcut handler code here
      })

- fyne_window_setup:
    description: "Set up a Fyne window with basic properties."
    code: |
      // Basic window setup
      win := fyne.CurrentApp().NewWindow("Window Title")
      win.Resize(fyne.NewSize(400, 300))
      win.CenterOnScreen()

      // Add close interceptor
      win.SetCloseIntercept(func() {
          // Cleanup code here
          win.Hide()
      })

      // Focus an input field
      if input != nil {
          win.Canvas().Focus(input)
      })

- fyne_layout_containers:
    description: "Create Fyne layout containers."
    code: |
      // Border layout with margins
      content := container.NewBorder(
          top,    // top widget
          bottom, // bottom widget
          left,   // left widget
          right,  // right widget
          center  // center/main widget
      )

      // Vertical box layout
      content := container.NewVBox(
          widget1,
          widget2,
          widget3,
      )

      // Horizontal box layout
      content := container.NewHBox(
          widget1,
          widget2,
          widget3,
      )

gui_library_notes:
- fyne_io_fyne_v2_5_3:
    description: "Important notes on Fyne.io/fyne v2.5.3 usage."
    notes:
    - key_events_and_shortcuts:
      - key_modifier_does_not_exist: true
      - use_desktop_custom_shortcut: true
      - register_shortcuts_via_canvas: true
      - use_keyname_instead_of_key: true
      - prefer_fyne_key_modifier_control: true
      - debug_key_events_with_extended_widget_entry: true
    - focus_and_window_management:
      - no_request_focus_method: true
      - use_canvas_focus_instead: true
      - call_center_on_screen_after_show: true
      - defer_window_close_in_tests: true
      - set_focus_for_popup_windows_in_show: true
      - set_focus_for_modal_windows_after_content_set: true
    - widget_implementation:
      - call_extend_base_widget_in_constructors: true
      - override_keydown_and_typedkey_for_key_handling: true
      - handle_task_list_updates_correctly: true
      - prefer_composition_over_inheritance_for_widgets: true
    - forms_and_dialogs:
      - set_dialog_size_after_creation: true
      - use_custom_widgets_in_forms: true
      - use_dialog_show_error_for_failures: true
      - show_confirm_for_destructive_actions: true
      - focus_ok_button_in_error_dialogs: true
    - testing_best_practices:
      - use_test_new_app_instead_of_custom_mocks: true
      - use_test_new_window_with_defer_close: true
      - use_test_assert_renders_to_image_for_visual_tests: true
      - use_httptest_new_server_for_http_tests: true
      - use_assert_jsoneq_for_json_comparisons: true
      - clean_up_resources_with_defer: true
      - test_success_and_error_paths: true
      - test_edge_cases_explicitly: true
    - resource_management:
      - use_go_embed_for_test_resources: true
      - clean_up_files_with_defer_os_remove: true
      - handle_windows_path_separators: true
      - use_storage_parse_uri_for_uris: true
    - state_management:
      - use_channels_for_async_notifications: true
      - verify_state_transitions_explicitly: true
      - handle_task_state_in_store_before_ui: true
    - canvas_and_rendering:
      - use_software_new_canvas_for_driver_tests: true
      - test_with_different_scale_factors: true
      - test_with_different_theme_variants: true
      - test_with_different_window_sizes: true
      - compare_rgba_values_exactly: true
      - test_transparent_backgrounds: true
    - error_handling:
      - test_not_implemented_errors: true
      - show_user_friendly_error_messages: true
      - log_detailed_error_information: true
      - handle_network_timeouts: true

project_overview:
- todo_application_features:
    description: "Main features of the Todo application (Currently Windows-only)."
    features:
    - quick_note_capture_via_global_hotkey: true
    - full_featured_todo_management_interface: true
    - built_with_go_and_sqlite: true
    - current_platform: "Windows"
    - future_platforms: [ "Linux", "macOS" ]

core_features:
- quick_note_system:
    description: "Features of the Quick-Note system (Windows implementation)."
    features:
    - global_hotkey_registration: true
    - minimal_graphical_popup_window: true
    - platform_specific_implementations: true
    - current_platform: "Windows"
- main_application_window:
    description: "Features of the main application window."
    features:
    - task_organization: true
    - task_completion_tracking: true
    - task_deletion: true
    - modern_graphical_interface_using_fyne_widgets: true

database:
- sqlite3_storage:
    description: "Using SQLite3 for storage."
    features:
    - repository_pattern: true
    - service_layer_abstraction: true

technical_requirements:
- go_version: "1.23 or higher"
- sqlite3: true
- mingw_w64_gcc_for_windows: true
- windows_sdk: true
- task_runner_for_build_automation: true
- jwt_authentication: true
- openapi_swagger: true
- websocket_support: true
- cors_enabled: true
- rate_limiting: true
- api_versioning: true
- secure_headers: true
- performance_monitoring: true

testing_requirements:
- unit_tests_for_all_packages: true
- integration_tests: true
- websocket_connection_tests: true
- authentication_tests: true
- load_performance_tests: true
- ci_pipeline_integration: true

system_integration:
- graceful_shutdown_handling: true
- system_service_support: [ "Windows service" ]
- future_system_service_support: [ "Linux systemd" ]
- auto_start_capability: "Windows Task Scheduler"
- update_mechanism: "Windows-specific"

documentation:
- comprehensive_readme: true
- api_documentation: true
- usage_examples: true
- installation_guides: true
- hotkey_documentation: true
- openapi_specification: true
- configuration_documentation: true

future_considerations:
- task_categories_tags: true
- due_dates_and_reminders: true
- data_export_import: true
- task_priorities: true
- recurring_tasks: true
- multiple_lists: true
- cloud_sync: true

api_features:
- http_server:
    description: "HTTP API server features"
    features:
    - restful_endpoints: true
    - jwt_authentication: true
    - request_validation: true
    - proper_error_handling: true
    - openapi_documentation: true
    - rate_limiting: true
    - cors_support: true
- websocket:
    description: "WebSocket features"
    features:
    - real_time_updates: true
    - connection_management: true
    - heartbeat_mechanism: true
    - task_notifications: true

endpoints:
- get_tasks: "/api/v1/tasks"
- get_task_by_id: "/api/v1/tasks/:id"
- create_task: "/api/v1/tasks"
- update_task: "/api/v1/tasks/:id"
- delete_task: "/api/v1/tasks/:id"
- list_tags: "/api/v1/tags"

configuration:
- http_port: "Set the port for the HTTP server"
- websocket_settings: "Configure WebSocket connection settings"
- authentication_settings: "JWT secret, token expiration, etc."
- cors_configuration: "Allowed origins, methods, headers"
- rate_limiting: "Requests per second, burst limit"

error_handling:
- use_standard_http_status_codes: true
- provide_meaningful_error_messages: true
- log_errors_with_context: true
- return_consistent_error_responses: true
