#-------------------------------------------------------------------------------#
#        Enhanced Linting Workflow for Go Projects                              #
#        Provides comprehensive code quality checks                              #
#-------------------------------------------------------------------------------#

name: Enhanced Linting
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - cursor/fix-three-bugs-in-the-codebase-153d

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      checks: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: true

      - name: Install linting tools
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          go install golang.org/x/tools/cmd/goimports@latest
          go install github.com/google/wire/cmd/wire@latest
          go install github.com/golang/mock/mockgen@latest

      - name: Download dependencies
        run: go mod download

      - name: Format check
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "Code is not formatted. Run 'gofmt -s -w .' to fix."
            gofmt -s -l .
            exit 1
          fi

      - name: Import check
        run: |
          if [ "$(goimports -l . | wc -l)" -gt 0 ]; then
            echo "Imports are not organized. Run 'goimports -w .' to fix."
            goimports -l .
            exit 1
          fi

      - name: Vet check
        run: go vet ./...

      - name: Lint with golangci-lint
        run: golangci-lint run ./... --timeout=5m

      - name: Build check
        run: |
          cd internal/application/container && wire gen -tags linux
          go build -tags linux ./...

      - name: Test check
        run: go test -race ./...

      - name: Security scan
        run: |
          # Install gosec for security scanning
          go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest
          gosec ./...

      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Check if there are any linting issues
            const lintOutput = '${{ steps.lint.outputs.result }}';
            
            let comment = '## üîç Enhanced Linting Results\n\n';
            comment += '‚úÖ **All code quality checks passed!**\n\n';
            comment += '### Checks Performed:\n';
            comment += '- ‚úÖ Code formatting (gofmt)\n';
            comment += '- ‚úÖ Import organization (goimports)\n';
            comment += '- ‚úÖ Static analysis (go vet)\n';
            comment += '- ‚úÖ Comprehensive linting (golangci-lint)\n';
            comment += '- ‚úÖ Build verification\n';
            comment += '- ‚úÖ Race condition detection\n';
            comment += '- ‚úÖ Security scanning (gosec)\n\n';
            comment += 'Your code meets all quality standards! üéâ';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            }); 