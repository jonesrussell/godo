# Code Quality Guidelines

This project maintains high code quality standards with consistent patterns.

## Code Organization

### Package Structure
- Follow Go package naming conventions
- Group related functionality
- Keep packages focused and small
- Use internal packages for private code

### File Organization
- One main type per file
- Group related functions
- Keep files under 500 lines
- Use descriptive file names

## Naming Conventions

### Interfaces
- Use descriptive names ending in -er or -able
- Examples: `TaskService`, `TaskRepository`, `TaskStore`
- Keep interfaces focused and small

### Functions
- Use descriptive verb-noun names
- Follow Go naming conventions
- Be consistent across the codebase
- Examples: `CreateTask`, `GetTaskByID`, `UpdateTask`

### Variables
- Use descriptive names
- Avoid abbreviations
- Be consistent with naming patterns
- Use camelCase for variables

## Documentation

### Comments
- Document exported functions and types
- Use clear, concise comments
- Follow Go comment conventions
- Document complex business logic

### README Files
- Keep documentation up to date
- Include setup instructions
- Document architecture decisions
- Provide usage examples

## Code Review Standards
- Review for SOLID principles
- Check for proper error handling
- Verify test coverage
- Ensure consistent formatting
description:
globs:
alwaysApply: false
---
