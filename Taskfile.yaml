version: '3'

vars:
  GO_VERSION: 1.23
  GOOS:
    sh: go env GOOS

tasks:
  default:
    cmds:
      - task: run

  run:
    desc: Run the application
    deps: [wire]
    cmds:
      - go run cmd/godo/main.go

  fmt:
    desc: Format Go code
    cmds:
      - go fmt ./...

  clean:
    desc: Clean up generated files and Docker artifacts
    cmds:
      - rm -rf bin/* internal/container/*_wire_gen.go
      - docker rm -f godo-linux-test godo-linux-build godo-linux-lint || true
      - docker rmi -f godo-linux-test godo-linux-builder godo-linux-wire godo-linux-lint || true

  wire:
    desc: Generate wire code
    cmds:
      - cd internal/container; wire gen -tags {{.GOOS}}

  build:
    desc: Build for current platform
    deps: [wire]
    cmds:
      - go build -tags {{.GOOS}} -o bin/godo{{if eq .GOOS "windows"}}.exe{{end}} cmd/godo/main.go

  build:cross:
    desc: Build for other platform
    deps: [wire]
    cmds:
      - GOOS={{if eq .GOOS "windows"}}linux{{else}}windows{{end}} CGO_ENABLED=0 go build -tags {{if eq .GOOS "windows"}}linux{{else}}windows{{end}} -o bin/godo{{if eq .GOOS "linux"}}.exe{{end}} cmd/godo/main.go

  build:docker:
    desc: Build using Docker
    deps: [clean]
    env:
      DOCKER_BUILDKIT: 1
    cmds:
      - docker build --target builder -f build/Dockerfile.linux -t godo-builder .
      - docker create --name godo-build godo-builder
      - docker cp godo-build:/app/bin/godo ./bin/
      - docker rm godo-build

  test:
    desc: Run tests
    deps: [wire]
    cmds:
      - go test -v ./...

  lint:
    desc: Run linters
    deps: [fmt]
    cmds:
      - golangci-lint run ./...

  # CI/CD tasks
  ci:
    desc: Run CI checks locally
    cmds:
      - task: fmt
      - task: lint
      - task: test
      - task: build
