version: '3'

vars:
  GO_VERSION: 1.23
  GOOS:
    sh: go env GOOS

tasks:
  default:
    cmds:
      - task: run

  setup:linux:
    desc: Install Linux dependencies
    cmds:
      - sudo apt-get update
      - sudo apt-get install -y xvfb libx11-dev

  run:
    desc: Run the application
    deps: [wire]
    env:
      CGO_ENABLED: 1
    cmds:
      - go run cmd/godo/main.go

  fmt:
    desc: Format Go code
    cmds:
      - go fmt ./...

  clean:
    desc: Clean up generated files
    cmds:
      - rm -rf bin/* internal/container/*_wire_gen.go

  wire:windows:
    desc: Generate wire code for Windows
    cmds:
      - cd internal/container; wire gen -tags windows

  wire:linux:
    desc: Generate wire code for Linux
    cmds:
      - cd internal/container; wire gen -tags linux

  wire:
    desc: Generate wire code for current platform
    cmds:
      - task: wire:{{OS}}

  build:
    desc: Build for current platform
    cmds:
      - task: build:{{OS}}

  build:windows:
    desc: Build for Windows
    deps: [wire:windows]
    env:
      CGO_ENABLED: 1
      GOOS: windows
      GOARCH: amd64
    cmds:
      - go build -tags "windows" -o bin/godo.exe cmd/godo/main.go

  build:linux:
    desc: Build for Linux
    deps: [wire:linux]
    env:
      CGO_ENABLED: 1
      GOOS: linux
      GOARCH: amd64
    cmds:
      - go build -tags "linux" -o bin/godo cmd/godo/main.go

  test:
    desc: Run tests
    deps: [wire]
    cmds:
      # Start Xvfb
      - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
      # Wait for Xvfb to start
      - sleep 1
      # Run tests with virtual display
      - DISPLAY=:99.0 FYNE_RENDERER=software go test -v ./...
      # Cleanup Xvfb
      - pkill Xvfb || true

  lint:
    desc: Run linters
    deps: [fmt]
    cmds:
      - golangci-lint run ./...

  # CI/CD tasks
  ci:
    desc: Run CI checks locally
    cmds:
      - task: fmt
      - task: lint
      - task: test
      - task: build

  act:build:
    desc: Run GitHub Actions build job locally using act
    cmds:
      - act -j build --container-architecture linux/amd64 
        -s GITHUB_TOKEN="${GITHUB_TOKEN}"
        --artifact-server-path /tmp/artifacts
        -P ubuntu-latest=catthehacker/ubuntu:act-latest

  # Optional helper task to clean up act artifacts
  act:clean:
    desc: Clean up act artifacts
    cmds:
      - rm -rf /tmp/artifacts
